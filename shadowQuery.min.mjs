/* eslint-disable */
export class ShadowQuery extends Array{constructor(e,t){if(0===e)return super(0);let o;o=Array.isArray(e)?e:"string"==typeof e?[shadowQuery.template(e)]:e instanceof ShadowQuery?e:e instanceof NodeList||e instanceof HTMLCollection?Array.from(e):[e.shadowRoot||e],t&&(o=find(o,t)),super(...o)}addClass(e){for(const t of this)t.classList.add(e);return this}after(e){for(const t of this){const o=t.parentNode;t===o.lastChild?toNodes(o,e,e=>o.appendChild(e)):toNodes(o,e,e=>o.insertBefore(e,t.nextSibling))}return this}append(e){for(const t of this)toNodes(t,e,e=>t.appendChild(e));return this}attr(e,t){if(1===arguments.length)return this[0]&&this[0].getAttribute(e);if(void 0===t||!1===t)for(const t of this)t.removeAttribute(e);else{"string"!=typeof t&&(t=JSON.stringify(t));for(const o of this)o.setAttribute(e,t)}return this}before(e){for(const t of this)toNodes(t.parentNode,e,e=>t.parentNode.insertBefore(e,t));return this}hasClass(e){for(const t of this)if(t.classList.contains(e))return!0;return!1}off(e,t){for(const o of this)if(/^attr:/.test(e))try{o[obsKey(attrFilter(e))][t].disconnect()}catch(e){}else if(/^prop:/.test(e))offProp(o,e,t);else if(/^text:/.test(e))try{o[obsKey(textFilter())][t].disconnect()}catch(e){}else o.removeEventListener(e,t._shadowQueryNoSelf||t);return this}on(e,t,o){const r=3===arguments.length&&"noSelf"===t;2===arguments.length&&(o=t);for(const t of this)/^text:$/.test(e)?observer(t,r,o,textFilter()):/^attr:/.test(e)?observer(t,r,o,attrFilter(e)):/^prop:/.test(e)?onProp(t,e,r,o):t.addEventListener(e,r?noSelf(o):o);return this}once(e,t){for(const o of this)/^text:$/.test(e)?onceObserver(o,t,textFilter()):/^attr:/.test(e)?onceObserver(o,t,attrFilter(e)):/^prop:/.test(e)?onceProp(o,e,t):o.addEventListener(e,t,{once:!0});return this}prepend(e){for(const t of this)t.firstChild?toNodes(t,e,e=>t.insertBefore(e,t.firstChild)):toNodes(t,e,e=>t.appendChild(e));return this}prop(e,t){if(1===arguments.length)return this[0]&&this[0][e];for(const o of this)o[e]=t;return this}query(e){return new ShadowQuery(find(this,e))}remove(){for(const e of this)e.parentElement.removeChild(e);return this}removeClass(e){for(const t of this)t.classList.remove(e);return this}shadow(e,t={mode:"open"}){for(const o of this){const r=o.attachShadow(t);e&&r.appendChild($.template(e))}return this}text(e){if(!arguments.length)return this[0]&&this[0].firstChild&&(this[0].firstChild.nodeType===Node.TEXT_NODE&&this[0].firstChild.nodeValue||textNode(this[0]).nodeValue);for(const t of this)t.firstChild&&t.firstChild.nodeType===Node.TEXT_NODE?t.firstChild.nodeValue=e:textNode(t,!0).nodeValue=e;return this}toggleClass(e,t){if(1===arguments.length)for(const t of this)t.classList.toggle(e);else{t=!!t;for(const o of this)o.classList.toggle(e,t)}return this}};export function shadowQuery(e,t){return new ShadowQuery(e,t)};export default shadowQuery;const $=shadowQuery;function toNodes(e,t,o){if(t instanceof HTMLTemplateElement)return o(t.content.cloneNode(!0));if(t instanceof Node)return o(t);if(t.constructor===Object&&(t=shadowQuery.template(t)),"function"==typeof t)return isProcessDynNodes(t)?t(e,o):o(t());t instanceof Array||(t=new ShadowQuery(t));for(const e of t)o(e)}function find(e,t){const o=[];for(let r=0;r<e.length;r++)if(/:host/.test(t))for(let n of t.split(","))if(/^\s*:host\s*/.test(n)){n=n.replace(/^\s*:host\s*/,"");let t=e[r].host||e[r];"string"==typeof t&&(t=e[r]),/[^\s]/.test(n)?o.push(...t.querySelectorAll(n)):o.push(t)}else o.push(...e[r].querySelectorAll(n));else e[r].querySelectorAll&&o.push(...e[r].querySelectorAll(t));return o}function textNode(e,t){for(let t=0;t<e.childNodes.length;t++)if(e.childNodes[t].nodeType===Node.TEXT_NODE)return e.childNodes[t];if(t)return console.warn&&console.warn('ShadowQuery is creating a text node. For performance reason you should put the text node into your DOM from the start (e.g. as an empty space or zero width space "&#8203;")'),e.appendChild(document.createTextNode("")),e.lastChild}function attrFilter(e){return{attributes:!0,attributeFilter:[e.replace(/^attr:/,"")]}}function textFilter(){return{characterData:!0,subtree:!0}}function onceObserver(e,t,o){const r=observer(e,!1,function(...e){r.disconnect(),t(...e)},o,t)}function observer(e,t,o,r,n=o){const s=new MutationObserver(t?noSelf(o,!0):o);return s.observe(e,r),e[obsKey(r)]?e[obsKey(r)][n]=s:e[obsKey(r)]={[n]:s},s}function obsKey(e){return`_shadowQueryObserver${JSON.stringify(e)}`}function offProp(e,t,o){if(!e[propKey(t)])return;const r=e[propKey(t)].listener;if(r.splice(r.indexOf(o._shadowQueryNoSelf||o),1),r.length)return;const n=e[propKey(t)].value;delete e[propKey(t)];const s=t.replace(/^prop:/,"");delete e[s],e[s]=n}function onceProp(e,t,o){onProp(e,t,!1,function _onceListener(...r){offProp(e,t,_onceListener);o(...r)})}function onProp(e,t,o,r){const n=propKey(t);e[n]||(e[n]={listener:[]}),e[n].listener.push(o?noSelf(r):r);const s=t.replace(/^prop:/,"");e instanceof HTMLInputElement&&("value"===s||"checked"===s)?onInputValueChange(e,s,n,t):e instanceof HTMLSelectElement&&"value"===s&&onInputValueChange(e,s,n,t),onPropertyChange(e,s,n)}function onInputValueChange(e,t,o,r){switch(t){case"value":e.addEventListener("change",()=>{e[o].value=e.value,tell(e,e[o],r)});break;case"checked":e.addEventListener("change",()=>{e[o].checked=e.checked,tell(e,e[o],r)})}}function onPropertyChange(e,t,o,r){(Object.prototype.hasOwnProperty.call(e,t)||void 0!==e[t])&&(e[o].value=e[t],delete e[t]);const n=htmlElementProperty(e,t);Object.defineProperty(e,t,{get:function(){return n?n.get.call(this):e[o].value},set:function(t){return n?n.set.call(this,t):e[o].value=t,tell(e,e[o],r),t},enumerable:!0,configurable:!0})}function htmlElementProperty(e,t){try{return Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e),t)||Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Object.getPrototypeOf(e)),t)}catch(e){return}}function propKey(e){return`_shadowQueryProp${e}`}function tell(e,t,o){for(const r of t.listener)r(t.value,e,o)}function noSelf(e,t){let o;return e._shadowQueryNoSelf=function(){o||(o=!0,e(),t?setTimeout(function(){o=!1}):o=!1)}}const templates={};let processDynNodesRef;function dynTemplate(e){const{array:t=[void 0],chunks:o,id:r="default",update:n}=e,s=e.template,i=`_shadowQueryChildArrayDynNode${r}`,c=`_shadowQueryChildArrayTimeout${r}`;function processDynNodes(r,l){r[c]&&(clearTimeout(r[c]),delete r[c]),r[i]||(r[i]=[]);const a=r[i];if(Object.prototype.hasOwnProperty.call(e,"condition")&&!e.condition)return removeNodes(0);function removeNodes(e){for(let t=e;t<a.length;t++)for(let e=0;e<a[t].length;e++)r.removeChild(a[t][e]);a.splice(e)}function iterDynNodeChunk(n){n>=t.length?e.done&&e.done():!o||n%o?iterNodeArray(n):r[c]=setTimeout(()=>iterNodeArray(n))}function iterNodeArray(e){let o=r[i][e];if(!o){const e=$.template(s);o=$(e.childNodes),l(e),r[i].push(o)}n&&n($(o),t[e],e),delete r[c],iterDynNodeChunk(++e)}a.length>t.length&&removeNodes(t.length),iterDynNodeChunk(0)}return processDynNodesRef=processDynNodes.prototype.constructor,processDynNodes}function isProcessDynNodes(e){return processDynNodesRef&&e&&e.prototype&&e.prototype.constructor===processDynNodesRef}shadowQuery.template=function(e){if("string"==typeof e){if(templates[e])return templates[e].content.cloneNode(!0);const t=document.createElement("template");return t.innerHTML=e,templates[e]=t,t.content.cloneNode(!0)}return e instanceof HTMLTemplateElement?e.content.cloneNode(!0):dynTemplate(e)};
