export class ShadowQuery extends Array{constructor(e,t){let o;if(Array.isArray(e))o=e;else if(e instanceof ShadowQuery)o=e;else if(e instanceof NodeList||e instanceof HTMLCollection){o=[];for(var r=0;r<e.length;r++)o.push(e[r])}else o=[shadow(e)];t&&(o=find(o,t)),super(...o)}addClass(e){for(let t of this)t.classList.add(e);return this}after(e){for(let t of this)t===t.parentNode.lastChild?toNodes(t,e,e=>t.appendChild(e)):toNodes(t,e,e=>t.parentNode.insertBefore(e,t.nextSibling));return this}append(e){for(let t of this)toNodes(t,e,e=>t.appendChild(e));return this}attr(e,t){if(1===arguments.length)return this[0]&&this[0].getAttribute(e);if(void 0===t||!1===t)for(let t of this)t.removeAttribute(e);else{"string"!=typeof t&&(t=JSON.stringify(t));for(let o of this)o.setAttribute(e,t)}return this}before(e){for(let t of this)toNodes(t,e,e=>t.parentNode.insertBefore(e,t));return this}hasClass(e){for(let t of this)if(t.classList.contains(e))return!0}off(e,t){for(let o of this)/^attr:/.test(e)||o.removeEventListener(e,t);return this}on(e,t){for(let o of this)/^attr:/.test(e)?new MutationObserver(t).observe(o,{attributes:!0,attributeFilter:[e.replace(/^attr:/,"")]}):o.addEventListener(e,t);return this}once(e,t){for(let o of this)/^attr:/.test(e)?onceObserver(o,e,t):onceListener(o,e,t);return this}prepend(e){for(let t of this)t===t.parentNode.lastChild?toNodes(t,e,e=>t.appendChild(e)):toNodes(t,e,e=>t.parentNode.insertBefore(e,t.firstChild));return this}prop(e,t){if(1===arguments.length)return this[0][e];if(void 0===t||!1===t)for(let t of this)delete t[e];else for(let o of this)o[e]=t;return this}query(e){return new ShadowQuery(find(this,e))}removeClass(e){for(let t of this)t.classList.remove(e);return this}text(e){if(!arguments.length)return this[0]&&this[0].childNodes[0]&&this[0].childNodes[0].nodeValue;for(let t of this)t.childNodes[0]&&(t.childNodes[0].nodeValue=e);return this}toggleClass(e,t){if(1===arguments.length)for(let t of this)t.classList.toggle(e);else for(let o of this)o.classList.toggle(e,t);return this}};export function shadowQuery(e,t){return new ShadowQuery(e,t)};export default shadowQuery;const $=shadowQuery;function toNodes(e,t,o){if(t instanceof Node)return o(t);if("function"==typeof t)return t(e,o);t instanceof Array||(t=new ShadowQuery(t));for(let e of t)o(e)}function find(e,t){const o=[];for(let r=0;r<e.length;r++)if(/^\s*:host\s*/.test(t))o.push(e[r].host||e[r]);else{const s=e[r].querySelectorAll(t);for(let e=0;e<s.length;e++)o.push(s[e])}return o}function onceListener(e,t,o){e.addEventListener(t,function r(...s){e.removeEventListener(t,r);o(...s)})}function onceObserver(e,t,o){const r=new MutationObserver(function(...e){r.disconnect(),o(...e)});r.observe(e,{attributes:!0,attributeFilter:[t.replace(/^attr:/,"")]})}function shadow(e){return e.shadowRoot||e}function createTemplate(e,t){for(let o of Object.keys(t))if("string"==typeof t[o]){const e=document.createElement("template");e.innerHTML=t[o],t[o]=e}else t[o]=new DynTemplate(e,t[o],o)}shadowQuery.template=function(e,t){e.getTemplate||("string"==typeof t&&(t={default:t}),createTemplate(e,t),e.constructor.prototype.getTemplate=function(e="default",o){return o&&t[e].patch?t[e].patch(o):t[e]instanceof DynTemplate?t[e].process:t[e].content.cloneNode(!0)},Object.defineProperty(e.constructor.prototype,"template",{get:function(){return this.getTemplate()}}))};class DynTemplate{constructor(e,t,o){this._node=e,this._template=this.__template=t,this._key=o,this.process=this._unpatched.bind(this),this.__patched=this._patched.bind(this)}patch(e){return this.__template=Object.assign(e,this._template),this.__patched}_unpatched(e,t){this._attachDynNodes(this._template,e,t)}_patched(e,t){this._attachDynNodes(this.__template,e,t)}_attachDynNodes(e,t,o){const r=this._getArray(e);t[this._timeoutKey]&&(clearTimeout(t[this._timeoutKey]),delete t[this._timeoutKey]),t[this._dynNodeKey]||(t[this._dynNodeKey]=[]);let s=t[this._dynNodeKey];if(!this._condition(e))return this._removeNodes(t,0,s);s.length>r.length&&this._removeNodes(t,r.length,s),this._iterDynNodeChunk(0,e,r,t,o)}_getArray(e){return e.array?"function"==typeof e.array?e.array():e.array:[void 0]}_condition(e){return!e.hasOwnProperty("condition")||("function"==typeof e.condition?e.condition():e.condition)}_removeNodes(e,t,o){for(let r=t;r<o.length;r++)for(let t=0;t<o[r].length;t++)e.removeChild(o[r][t]);o.splice(t)}_iterDynNodeChunk(e,t,o,r,s){const{chunks:n}=t;e>=o.length||(!n||e%n?this._iterNodeArray(e,t,o,r,s):r[this._timeoutKey]=setTimeout(()=>{this._iterNodeArray(e,t,o,r,s)}))}_iterNodeArray(e,t,o,r,s){let{template:n,update:i}=t,h=r[this._dynNodeKey][e];h||(n=this._node.getTemplate(n),h=$(n.children),s(n),r[this._dynNodeKey].push(h)),i&&i($(h),o[e],e),delete r[this._timeoutKey],this._iterDynNodeChunk(++e,t,o,r,s)}get _dynNodeKey(){return`_shadowQueryChildArrayDynNode${this._key}`}get _timeoutKey(){return`_shadowQueryChildArrayTimeout${this._key}`}}shadowQuery.changed=function(e,t){let o=!1;e._shadowQueryChanges||(e._shadowQueryChanges={});for(let r of Object.keys(t)){const s=JSON.stringify(t[r]);s!==e._shadowQueryChanges[r]&&(e._shadowQueryChanges[r]=s,o=!0)}return o},shadowQuery.noSelf=function(e){let t;return function(){t||(t=!0,e(),t=!1)}},shadowQuery.properties=function(e,t){for(let o of Object.keys(t))if(e.hasOwnProperty(o)){const t=e[o];delete e[o],e[o]=t}else{const r=t[o];"function"==typeof r?e[o]=r():void 0!==r&&(e[o]=r)}};
